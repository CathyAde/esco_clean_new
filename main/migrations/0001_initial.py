# Generated by Django 5.2.1 on 2025-06-16 15:40

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('role', models.CharField(choices=[('patient', 'Patient'), ('docteur', 'Médecin'), ('infirmier', 'Infirmier'), ('secretaire', 'Secrétaire'), ('administrateur', 'Administrateur')], default='patient', max_length=20)),
                ('telephone', models.CharField(blank=True, max_length=15, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('date_naissance', models.DateField(blank=True, null=True)),
                ('specialite', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_licence', models.CharField(blank=True, max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Infirmier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_ordre', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Medecin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialite', models.CharField(max_length=100)),
                ('numero_ordre', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_patient', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('groupe_sanguin', models.CharField(blank=True, max_length=5, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('antecedents', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('poids', models.FloatField(blank=True, help_text='Poids en kg', null=True)),
                ('taille', models.FloatField(blank=True, help_text='Taille en cm', null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('situation_familiale', models.CharField(blank=True, max_length=50, null=True)),
                ('personne_contact', models.CharField(blank=True, max_length=100, null=True)),
                ('tel_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('medecin_traitant', models.CharField(blank=True, max_length=100, null=True)),
                ('assurance', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date_prescription', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_medecin', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_patient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date_prescription'],
            },
        ),
        migrations.CreateModel(
            name='RendezVous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_rdv', models.DateField()),
                ('heure_rdv', models.TimeField(default=datetime.time(9, 0))),
                ('motif', models.TextField()),
                ('status', models.CharField(choices=[('programme', 'Programmé'), ('confirme', 'Confirmé'), ('en_cours', 'En cours'), ('termine', 'Terminé'), ('annule', 'Annulé')], default='programme', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rdv_medecin', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rdv_patient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rendez-vous',
                'verbose_name_plural': 'Rendez-vous',
                'ordering': ['-date_rdv', '-heure_rdv'],
            },
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symptomes', models.TextField(blank=True, null=True)),
                ('diagnostic', models.TextField(blank=True, null=True)),
                ('traitement', models.TextField(blank=True, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rdv', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.rendezvous')),
            ],
        ),
        migrations.CreateModel(
            name='Secretaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(blank=True, max_length=100, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SoinsInfirmier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_soin', models.CharField(choices=[('pansement', 'Pansement'), ('injection', 'Injection'), ('perfusion', 'Perfusion'), ('prise_constantes', 'Prise de constantes'), ('medicament', 'Administration médicament'), ('autre', 'Autre')], max_length=30)),
                ('description', models.TextField()),
                ('date_soin', models.DateTimeField()),
                ('observations', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('infirmier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soins_infirmier', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soins_patient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Soin infirmier',
                'verbose_name_plural': 'Soins infirmiers',
                'ordering': ['-date_soin'],
            },
        ),
        migrations.CreateModel(
            name='Planning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jour', models.CharField(choices=[('lundi', 'Lundi'), ('mardi', 'Mardi'), ('mercredi', 'Mercredi'), ('jeudi', 'Jeudi'), ('vendredi', 'Vendredi'), ('samedi', 'Samedi'), ('dimanche', 'Dimanche')], default='lundi', max_length=10)),
                ('heure_debut', models.TimeField(default='09:00')),
                ('heure_fin', models.TimeField(default='17:00')),
                ('disponible', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['jour', 'heure_debut'],
                'unique_together': {('user', 'jour', 'heure_debut')},
            },
        ),
    ]
